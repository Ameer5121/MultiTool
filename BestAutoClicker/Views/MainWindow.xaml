<Window x:Class="BestAutoClicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BestAutoClicker"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Enums="clr-namespace:BestAutoClicker.Helper.Enums"
        xmlns:Converter="clr-namespace:BestAutoClicker.Helper.Converters"
        mc:Ignorable="d"
        Title="MultiTool" 
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        MinHeight="400" 
        MinWidth="550" 
        MaxHeight="400" 
        MaxWidth="550" 
        Background="{StaticResource HomeWindow}"
        FontFamily="{materialDesign:MaterialDesignFont}">
    <Window.Resources>
        <Converter:LRConverter x:Key="LRConverter"></Converter:LRConverter>
        <Converter:TextBoxStringConverter x:Key="TextBoxStringConverter"></Converter:TextBoxStringConverter>

        <Style x:Key="TabButton" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="White"></Setter>
                    <Setter Property="BorderThickness" Value="0.5"></Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="Transparent"/>
            </Style.Resources>
            <Style.BasedOn>
                <StaticResource ResourceKey="MaterialDesignFlatButton"/>
            </Style.BasedOn>
        </Style>
    </Window.Resources>




    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="30"
                GlassFrameThickness="0,30,0,0"
                NonClientFrameEdges="None"
                 UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                              BorderBrush="{StaticResource WindowBorder}"
                              BorderThickness="0,30,0,0">
                                <ContentPresenter/>
                            </Border>
                            <DockPanel Height="30"  VerticalAlignment="Top" LastChildFill="False">
                                <Button Background="Transparent" BorderBrush="Transparent" Foreground="Red" Content="X" DockPanel.Dock="Right" WindowChrome.IsHitTestVisibleInChrome="True" Click="ShutDown"></Button>
                                <Button Background="Transparent" BorderBrush="Transparent" Foreground="White" DockPanel.Dock="Right" WindowChrome.IsHitTestVisibleInChrome="True" Click="Minimize">
                                    <materialDesign:PackIcon Kind="Minimize"></materialDesign:PackIcon>
                                </Button>
                                <DockPanel >
                                    <Button Style="{StaticResource TabButton}" Foreground="LightGray" WindowChrome.IsHitTestVisibleInChrome="True" Height="25" FontSize="12" Content="AutoClicker" Background="Transparent" Margin="1, 5, 0, 0" Click="OpenAutoClickerTab" ></Button>
                                    <Button Style="{StaticResource TabButton}" Foreground="LightGray" WindowChrome.IsHitTestVisibleInChrome="True" Height="25" FontSize="12" Content="Controls" Background="Transparent" Margin="0, 5, 0, 0" Click="OpenControlsTab" ></Button>
                                </DockPanel>
                            </DockPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Style>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.3*"></ColumnDefinition>
            <ColumnDefinition Width="1.3*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>


        <Frame x:Name="MainFrame" NavigationUIVisibility="Hidden" Grid.ColumnSpan="99" Grid.RowSpan="99" Panel.ZIndex="0"></Frame>
        <Label Grid.ColumnSpan="3" FontSize="15" Content="Mode" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Margin="0,0,3,0"></Label>

        <StackPanel Name="ModeCheckBoxes" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0,0,3,0">
            <CheckBox IsChecked="True" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked"  Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.AutoClicker}" Content="Auto Clicker (AC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="1" Foreground="{StaticResource Text}" Background="White" Margin="5" >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
            <CheckBox Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.HoldClicker}"  Content="Hold Clicker (HC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="2" Foreground="{StaticResource Text}" Background="White" Margin="5"  >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
            <CheckBox Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.MultiplePoints}" Content="Multi Point Clicking (MPC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="3" Foreground="{StaticResource Text}" Background="White" Margin="5"  >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
        </StackPanel>

        <Button Command="{Binding LoadPointsCommand}" Content="Load" Grid.Row="4" Grid.RowSpan="2" Background="{StaticResource Buttons}" BorderBrush="Transparent" VerticalAlignment="Top" Margin="2,2,2,0" ></Button>
        <Button Command="{Binding SavePointsCommand}" Content="Save" Grid.Row="4" Grid.RowSpan="2" Grid.Column="1" Background="{StaticResource Buttons}" BorderBrush="Transparent" VerticalAlignment="Top" Margin="3,2,3,0" ></Button>

        <StackPanel Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
            <materialDesign:PackIcon Margin="0, 0, 10, 0" Kind="About" Foreground="White" Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                <materialDesign:PackIcon.ToolTip>
                    <ToolTip Background="{StaticResource HomeWindow}">
                        <TextBlock>
                        <Run Text="Left Click:  " Foreground="LightBlue"></Run>
                        <Run Text="Highlights a point through the Main Window, else, when used in the MPC window, creates a new point" Foreground="White"></Run>
                        <LineBreak></LineBreak>
                        <LineBreak></LineBreak>
                        <Run Text="Right Click:  " Foreground="LightBlue"></Run>
                        <Run Text="Removes a point in both the Main- and MPC Window"></Run>
                        <LineBreak></LineBreak>
                        <LineBreak></LineBreak>
                        <Run Text="Middle Click:  " Foreground="LightBlue"></Run>
                        <Run Text="Highlights a point through the MPC Window"></Run>
                        </TextBlock>
                    </ToolTip>
                </materialDesign:PackIcon.ToolTip>
            </materialDesign:PackIcon>
            <TextBlock Text="Custom Points" Grid.Row="5" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Text}"/>
            <Border Margin="10, 0, 0, 0" Grid.Row="5" Grid.Column="1" BorderBrush="White" BorderThickness="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20" Padding="0">
                <Button Command="{Binding ClearPointsCommand}" Background= "{StaticResource Buttons}" Foreground="Red" Padding="0" Width="20" Height="20" VerticalAlignment="Center"  HorizontalAlignment="Center" VerticalContentAlignment="Top" BorderBrush="Transparent" BorderThickness="1">
                    <materialDesign:PackIcon  Kind="WindowClose" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"></materialDesign:PackIcon>
                    <Button.ToolTip>
                        <ToolTip Content="Clear All Points" Background="{StaticResource HomeWindow}"></ToolTip>
                    </Button.ToolTip>
                </Button>
            </Border>
        </StackPanel>
        <Button Click="EditPoints" Margin="0,0,10,0" Grid.Row="5" Grid.ColumnSpan="2" Content="Edit" Background= "{StaticResource Buttons}" Foreground="LightGreen" Padding="0" Width="50" Height="20" VerticalAlignment="Bottom"  HorizontalAlignment="Right" VerticalContentAlignment="Center" BorderBrush="Transparent" BorderThickness="1"></Button>

        <Border Name="PointsBorder" Grid.Row="6" Grid.RowSpan="3" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{StaticResource WindowBorder}" Margin="5,5,5,5" >
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="PointsListBox" Background="{StaticResource Chat}" ItemsSource="{Binding MPCModels}"  Foreground="{StaticResource Text}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="MainBorder" Tag="{Binding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Margin="5,10,10,10" Grid.ColumnSpan="2" MouseLeftButtonDown="OnLeftClickPoint" MouseRightButtonDown="OnRightClickPoint" Text="{Binding Point}" Foreground="{StaticResource Text}" VerticalAlignment="Center"></TextBlock>

                                    <DockPanel Margin="0,0,0,0" Grid.Column="1" LastChildFill="False">
                                        <ComboBox Grid.Column="3" SelectedIndex="{Binding ClickingMode, Converter={StaticResource LRConverter}}" Margin="0,0,5,0" DockPanel.Dock="Right" Width="26" VerticalAlignment="Center" Foreground="White" materialDesign:ComboBoxAssist.ShowSelectedItem="True" BorderBrush="White" 
                                            materialDesign:TextFieldAssist.UnderlineBrush="White">
                                            <ComboBox.Resources>
                                                <SolidColorBrush x:Key="MaterialDesignPaper" Color="#2F3136"/>
                                            </ComboBox.Resources>
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=RightLeftMPCCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=RightLeftMPCCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                            <ComboBoxItem Content="L"></ComboBoxItem>
                                            <ComboBoxItem Content="R"></ComboBoxItem>
                                        </ComboBox>


                                        <TextBox Grid.Column="2" TextAlignment="Center" Text="{Binding Multiplicity}" DockPanel.Dock="Right" PreviewTextInput="CheckForNumbers" Width="22" Margin="0,0,10,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=MultiplicityCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=MultiplicityCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>

                                        <Border DockPanel.Dock="Right" Margin="0,5,5,0" BorderBrush="White" BorderThickness="1" Width="130" >
                                            <DockPanel LastChildFill="False">
                                                <TextBox TextAlignment="Center" Text="{Binding Milliseconds, Converter={StaticResource TextBoxStringConverter}}" ToolTip="MilliSeconds" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Seconds, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Seconds" PreviewTextInput="CheckForNumbers" Width="25" Margin="6,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Minutes, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Minutes" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Hours, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Hours" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                            </DockPanel>

                                            <Border.Style>
                                                <Style TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=UniversalDelayCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=UniversalDelayCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>


                                    </DockPanel>


                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>



        <Label Grid.Column="3" FontSize="15" Content="Miscellaneous" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Grid.ColumnSpan="3"></Label>
        <Label Grid.Column="3" FontSize="15" Grid.Row="6" Content="Speed" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.ColumnSpan="3"></Label>

        <StackPanel Grid.Column="3" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="5" HorizontalAlignment="Left" VerticalAlignment="Top">

            <StackPanel Name="RightLeftCheckBoxes" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2">
                <CheckBox Command="{Binding SetClickingModeCommand}" CommandParameter="{x:Static Enums:ClickingMode.LeftClickDown}" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" IsChecked="True" Content="Left Clicking mode" VerticalAlignment="Center" BorderBrush="Black" Margin="5" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                    <CheckBox.Resources>
                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                    </CheckBox.Resources>
                </CheckBox>

                <CheckBox Command="{Binding SetClickingModeCommand}" CommandParameter="{x:Static Enums:ClickingMode.RightClickDown}" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Content="Right Clicking mode" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Margin="5" Foreground="{StaticResource Text}" Background="White">
                    <CheckBox.Resources>
                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                    </CheckBox.Resources>
                </CheckBox>
            </StackPanel>

            <StackPanel Name="MPCCheckBoxes" Grid.Column="4" Grid.Row="3" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0,5,0,0">
                <Border VerticalAlignment="Center" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                    <Border.ToolTip>
                        <ToolTip Content="When enabled, delay of the speed section will be utilised.&#x0a;When disabled, grants the possibility to add a specific delay per point." Background="{StaticResource HomeWindow}"></ToolTip>
                    </Border.ToolTip>
                    <CheckBox IsChecked="{Binding UniversalDelay}" x:Name="UniversalDelayCheckBox" Content="Universal delay (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                        <CheckBox.Resources>
                            <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                        </CheckBox.Resources>
                    </CheckBox>
                </Border>

                <Border VerticalAlignment="Center" Padding="0" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                    <Border.ToolTip>
                        <ToolTip Content="Grants the possibility to choose if a point will be clicked by the left or right mouse button.&#x0a;Overrides the Left- and Right Clicking modes." Background="{StaticResource HomeWindow}"></ToolTip>
                    </Border.ToolTip>
                    <CheckBox IsChecked="{Binding RLMPCIsChecked}" x:Name="RightLeftMPCCheckBox" Content="Right / Left Click Option (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                        <CheckBox.Resources>
                            <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                        </CheckBox.Resources>
                    </CheckBox>
                </Border>

                <Border VerticalAlignment="Center" Padding="0" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                    <Border.ToolTip>
                        <ToolTip Content="Grants the ability to choose how many times a certain point will be clicked." Background="{StaticResource HomeWindow}"></ToolTip>
                    </Border.ToolTip>
                    <CheckBox x:Name="MultiplicityCheckBox" Content="Multiplicity (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                        <CheckBox.Resources>
                            <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                        </CheckBox.Resources>
                    </CheckBox>
                </Border>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="7" Grid.Column="3" Grid.RowSpan="5" Grid.ColumnSpan="3" VerticalAlignment="Top" Margin="0,-5,0,0">

            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="MilliSeconds" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding MilliSeconds, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="White" CaretBrush="White" Margin="0,5,0,0"></TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Seconds" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Seconds, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="White" CaretBrush="White" Margin="0,5,0,0"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Minutes" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Minutes, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="White" CaretBrush="White" Margin="0,5,0,0"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Hours" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Hours, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="White" CaretBrush="White" Margin="0,5,0,0"></TextBox>
            </StackPanel>
        </StackPanel>


        <!-- Right Outlines-->
        <Border Background="White" BorderThickness="1" Grid.Column="2" Width="3" Grid.RowSpan="9" HorizontalAlignment="Center"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="5" Grid.Column="3" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="3"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="6" Grid.Column="3" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="3"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="2" Grid.Column="3" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="3"></Border>
        <!-- Right Outlines-->


        <!-- Left Outlines-->
        <Border Background="White" BorderThickness="1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="6"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="4" Grid.Column="0" VerticalAlignment="Top" Height="3" Grid.ColumnSpan="3"></Border>
        <!-- Left Outlines-->

    </Grid>
</Window>
