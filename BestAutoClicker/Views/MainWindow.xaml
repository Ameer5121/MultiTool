<Window x:Class="BestAutoClicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BestAutoClicker"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Enums="clr-namespace:BestAutoClicker.Helper.Enums"
        xmlns:Converter="clr-namespace:BestAutoClicker.Helper.Converters"
        mc:Ignorable="d"
        Title="MultiTool" 
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        MinHeight="400" 
        MinWidth="700" 
        MaxHeight="400" 
        MaxWidth="700" 
        Background="{StaticResource HomeWindow}"
        FontFamily="{materialDesign:MaterialDesignFont}" Style="{StaticResource CustomWindowStyle}" >
    <Window.Resources>
        <Converter:LRConverter x:Key="LRConverter"></Converter:LRConverter>
        <Converter:TextBoxStringConverter x:Key="TextBoxStringConverter"></Converter:TextBoxStringConverter>
    </Window.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*"></ColumnDefinition>
            <ColumnDefinition Width="1.5*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>



        <Label Grid.ColumnSpan="2" Content="Mode" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"></Label>

        <StackPanel Name="ModeCheckBoxes" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="2">
            <CheckBox IsChecked="True" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked"  Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.AutoClicker}" Content="Auto Clicker (AC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="1" Foreground="{StaticResource Text}" Background="White" Margin="5" >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
            <CheckBox Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.HoldClicker}"  Content="Hold Clicker (HC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="2" Foreground="{StaticResource Text}" Background="White" Margin="5"  >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
            <CheckBox Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Command="{Binding SetModeCommand}" CommandParameter="{x:Static Enums:AutoClickerMode.MultiplePoints}" Content="Multi Point Clicking (MPC)" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Row="3" Foreground="{StaticResource Text}" Background="White" Margin="5"  >
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
        </StackPanel>

        <Button Command="{Binding LoadPointsCommand}" Content="Load" Grid.Row="4" Grid.RowSpan="2" Background="{StaticResource Buttons}" BorderBrush="Transparent" VerticalAlignment="Top" Margin="2.5,2,2.5,0" ></Button>
        <Button Command="{Binding SavePointsCommand}" Content="Save" Grid.Row="4" Grid.RowSpan="2" Grid.Column="1" Background="{StaticResource Buttons}" BorderBrush="Transparent" VerticalAlignment="Top" Margin="2.5,2,2.5,0" ></Button>

        <Border Grid.Row="5" Grid.Column="1" BorderBrush="White" BorderThickness="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20" Padding="0" Margin="0,10,30,0">
            <Button Command="{Binding ClearPointsCommand}" Background= "{StaticResource Buttons}" Foreground="Red" Padding="0" Width="20" Height="20" VerticalAlignment="Center"  HorizontalAlignment="Center" VerticalContentAlignment="Top" BorderBrush="Transparent" BorderThickness="1">
                <materialDesign:PackIcon  Kind="WindowClose" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"></materialDesign:PackIcon>
                <Button.ToolTip>
                    <ToolTip Content="Clear All Points" Background="{StaticResource HomeWindow}"></ToolTip>
                </Button.ToolTip>
            </Button>
        </Border>


        <TextBlock Text="Custom Points" Grid.Row="5" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Text}" Margin="0,10,0,0"/>

        <Border Grid.Row="6" Grid.RowSpan="3" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{StaticResource WindowBorder}" Margin="5" >
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="PointsListBox" Background="{StaticResource Chat}" ItemsSource="{Binding MPCModels}"  Foreground="{StaticResource Text}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="MainBorder">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                   
                                    <TextBlock Margin="5,10,10,10" MouseLeftButtonDown="OnLeftClickPoint" MouseRightButtonDown="OnRightClickPoint" Text="{Binding Point}" Foreground="{StaticResource Text}" VerticalAlignment="Center"></TextBlock>

                                    <DockPanel Margin="0,0,0,0" Grid.Column="1" LastChildFill="False">
                                        <ComboBox Grid.Column="3" SelectedIndex="{Binding ClickingMode, Converter={StaticResource LRConverter}}" Margin="0,0,5,0" DockPanel.Dock="Right" Width="26" VerticalAlignment="Center" Foreground="White" materialDesign:ComboBoxAssist.ShowSelectedItem="True" BorderBrush="White" 
                                                materialDesign:TextFieldAssist.UnderlineBrush="White">
                                            <ComboBox.Resources>
                                                <SolidColorBrush x:Key="MaterialDesignPaper" Color="#2F3136"/>
                                            </ComboBox.Resources>
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=RightLeftMPCCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=RightLeftMPCCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                            <ComboBoxItem Content="L"></ComboBoxItem>
                                            <ComboBoxItem Content="R"></ComboBoxItem>
                                        </ComboBox>


                                        <TextBox Grid.Column="2" TextAlignment="Center" Text="{Binding Multiplicity}" DockPanel.Dock="Right" PreviewTextInput="CheckForNumbers" Width="22" Margin="0,0,10,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=MultiplicityCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=MultiplicityCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>

                                        <Border DockPanel.Dock="Right" Margin="0,5,5,0" BorderBrush="White" BorderThickness="1" Width="130" >
                                            <DockPanel LastChildFill="False">
                                                <TextBox TextAlignment="Center" Text="{Binding Milliseconds, Converter={StaticResource TextBoxStringConverter}}" ToolTip="MilliSeconds" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Seconds, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Seconds" PreviewTextInput="CheckForNumbers" Width="25" Margin="6,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Minutes, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Minutes" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                                <TextBox TextAlignment="Center" Text="{Binding Hours, Converter={StaticResource TextBoxStringConverter}}" ToolTip="Hours" PreviewTextInput="CheckForNumbers" Width="25" Margin="5,0,0,0" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
                                            </DockPanel>

                                            <Border.Style>
                                                <Style TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=UniversalDelayCheckBox, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=UniversalDelayCheckBox, Path=IsChecked}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        
                                        
                                    </DockPanel>
                                    
                                    
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>


        <Label Grid.Column="3" Content="Speed" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"></Label>
        <Label Grid.Column="4" Content="Miscellaneous" Foreground="{StaticResource Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"></Label>


        <StackPanel Name="RightLeftCheckBoxes" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2">
            <CheckBox Command="{Binding SetClickingModeCommand}" CommandParameter="{x:Static Enums:ClickingMode.LeftClickDown}" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" IsChecked="True" Content="Left Clicking mode" VerticalAlignment="Center" BorderBrush="Black" Margin="5" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>

            <CheckBox Command="{Binding SetClickingModeCommand}" CommandParameter="{x:Static Enums:ClickingMode.RightClickDown}" Unchecked="OnCheckBoxUnChecked" Checked="OnCheckBoxChecked" Content="Right Clicking mode" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Margin="5" Foreground="{StaticResource Text}" Background="White">
                <CheckBox.Resources>
                    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                </CheckBox.Resources>
            </CheckBox>
        </StackPanel>

        <StackPanel Name="MPCCheckBoxes" Grid.Column="4" Grid.Row="3" Grid.RowSpan="3">
            <Border VerticalAlignment="Center" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                <Border.ToolTip>
                    <ToolTip Content="When enabled, delay of the speed section will be utilised.&#x0a;When disabled, grants the possibility to add a specific delay per point." Background="{StaticResource HomeWindow}"></ToolTip>
                </Border.ToolTip>
                <CheckBox IsChecked="{Binding UniversalDelay}" x:Name="UniversalDelayCheckBox" Content="Universal delay (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                    <CheckBox.Resources>
                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                    </CheckBox.Resources>
                </CheckBox>
            </Border>

            <Border VerticalAlignment="Center" Padding="0" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                <Border.ToolTip>
                    <ToolTip Content="Grants the possibility to choose if a point will be clicked by the left or right mouse button.&#x0a;Overrides the Left- and Right Clicking modes." Background="{StaticResource HomeWindow}"></ToolTip>
                </Border.ToolTip>
                <CheckBox IsChecked="{Binding RLMPCIsChecked}" x:Name="RightLeftMPCCheckBox" Content="Right / Left Click Option (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                    <CheckBox.Resources>
                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                    </CheckBox.Resources>
                </CheckBox>
            </Border>

            <Border VerticalAlignment="Center" Padding="0" BorderBrush="White" BorderThickness="0" Margin="5,5,5,5">
                <Border.ToolTip>
                    <ToolTip Content="Grants the ability to choose how many times a certain point will be clicked." Background="{StaticResource HomeWindow}"></ToolTip>
                </Border.ToolTip>
                <CheckBox x:Name="MultiplicityCheckBox" Content="Multiplicity (MPC)" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1" Foreground="{StaticResource Text}" Background="White">
                    <CheckBox.Resources>
                        <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="White"/>
                    </CheckBox.Resources>
                </CheckBox>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="3" Grid.RowSpan="5" Grid.ColumnSpan="1" VerticalAlignment="Top">

            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="MilliSeconds" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding MilliSeconds, UpdateSourceTrigger=Default, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Seconds" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Seconds, UpdateSourceTrigger=Default, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Minutes" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Minutes, UpdateSourceTrigger=Default, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="Hours" Width="100" Foreground="{StaticResource Text}" VerticalAlignment="Bottom" DockPanel.Dock="Left"></TextBlock>
                <TextBox Text="{Binding Hours, UpdateSourceTrigger=Default, Converter={StaticResource TextBoxStringConverter}}" Width="100" VerticalAlignment="Center" BorderBrush="White" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="LightGreen" CaretBrush="White"></TextBox>
            </StackPanel>
        </StackPanel>


        <!-- Right Outlines-->
        <Border Background="White" BorderThickness="1" Grid.Column="2" Width="3" Grid.RowSpan="9" HorizontalAlignment="Right"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="0" Grid.Column="4" HorizontalAlignment="Left" Width="3" Grid.RowSpan="6"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="5" Grid.Column="3" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="2"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="6" Grid.Column="3" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="2"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="2" Height="3" VerticalAlignment="Bottom" Grid.Column="4"></Border>
        <!-- Right Outlines-->


        <!-- Left Outlines-->
        <Border Background="White" BorderThickness="1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="5"></Border>
        <Border Background="White" BorderThickness="1" Grid.Row="3" Grid.Column="0" VerticalAlignment="Bottom" Height="3" Grid.ColumnSpan="3"></Border>
        <!-- Left Outlines-->

        <TextBlock Text="WIP" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Foreground="{StaticResource Text}" Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="2"></TextBlock>
    </Grid>
</Window>
